{
  "name": "connect-prerenderer",
  "description": "Express/connect middleware to pre-render ajax page for non-ajax browsers, especially using angular.js",
  "version": "0.5.5",
  "author": {
    "name": "Daishi Kato",
    "email": "daishi@axlight.com"
  },
  "dependencies": {
    "jsdom": "0.8.1",
    "request": "~2.14.0"
  },
  "devDependencies": {
    "mocha": "~1.12.0",
    "karma": "0.8.3",
    "express": "~3.3.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dai-shi/connect-prerenderer.git"
  },
  "keywords": [
    "express",
    "connect",
    "angular"
  ],
  "main": "./connect-prerenderer.js",
  "scripts": {
    "test": "./runTest.sh"
  },
  "license": "BSD",
  "engines": {
    "node": ">=0.8.4"
  },
  "readme": "connect-prerenderer\n===================\n\nExpress/connect middleware to pre-render ajax page for non-ajax browsers, especially using angular.js\n\nHow to use\n----------\n\n    % npm install connect-prerenderer\n\nIn app.js:\n\n    var express = require('express');\n    var prerenderer = require('connect-prerenderer');\n    var app = express();\n    app.use(prerenderer());\n    ...\n\nOptions\n-------\n\n* targetGenerator: a name or a function to generate a new one for HTTP request.\n  * \"default\" --- check \"/PRERENDER-\" prefix which will be removed, and replace \"HASH-\" to \"#/\" and all \"-\"s to \"/\"s to make a target URL. (see the source code for more options.)\n  * \"googlebot\" --- follow <https://developers.google.com/webmasters/ajax-crawling/docs/getting-started>\n  * a function that returns a target URL for prerendering or null.\n* timeout: an integer in milliseconds to specify how long it watis to prerender.\n* cookieDomain: a domain name to allow passing cookies.\n\n\nCoding conventions (client-side)\n--------------------------------\n\n* If an html is prerendered, the body is like: `<body data-prerendered=\"true\">`\n* When JavaScript code finishes prerendering, it should call: `document.onprerendered()`\n\nNotes for AngularJS\n-------------------\n\nThe following snippet would help AngularJS to work:\n\n    <script>\n      angular.element(document).ready(function() {\n        if (document.body.getAttribute('data-prerendered')) {\n          document.addEventListener('click', function() {\n            document.removeEventListener('click', arguments.callee, true);\n            angular.bootstrap(document.body, []);\n            return true;\n          }, true);\n        } else {\n          angular.bootstrap(document.body, []);\n        }\n      });\n    </script>\n\nTo keep templates for interpolation in a prerendered html,\nuse the modified version of `angular.js` located in test/server/public/.\n\nLimitations\n-----------\n\n* `style` attributes are not preserved by jsdom (use `class` only).\n\nAngularJS only limitations:\n\n* `ng-repeat` workaround only works with `ng-repeat` attributes.\n\nTODOs\n-----\n\n* more complex examples.\n",
  "readmeFilename": "README.md",
  "_id": "connect-prerenderer@0.5.5",
  "dist": {
    "shasum": "8f7faac935da3bbd573ab2ce0fb9cb51723bc5b8"
  },
  "_resolved": "git+https://github.com/dai-shi/connect-prerenderer.git#b0504990b57e8bef3643e127c11287ff53e03030",
  "_from": "git+https://github.com/dai-shi/connect-prerenderer.git"
}
